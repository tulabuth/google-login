{"ast":null,"code":"var _jsxFileName = \"/Users/tolabuth/Desktop/prosonal/nest/Google Login/react-nestjs/client/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport axios from \"axios\";\nimport { useStore } from \"./hook/useStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getData() {\n  const res = await fetch('https://api.example.com/...');\n  // The return value is *not* serialized\n  // You can return Date, Map, Set, etc.\n\n  if (!res.ok) {\n    // This will activate the closest `error.js` Error Boundary\n    throw new Error('Failed to fetch data');\n  }\n  return res.json();\n}\nasync function App() {\n  _s();\n  const data = await getData();\n  const setAuthData = useStore(state => state.setAuthData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      useOneTap: true,\n      onSuccess: async credentialResponse => {\n        console.log(\"this is token: \", credentialResponse.credential);\n        const {\n          data\n        } = await axios.post(\"http://localhost:3003/member/auth/google-login\", {\n          // pass the token as part of the req body\n          token: credentialResponse.credential\n        });\n        localStorage.setItem(\"AuthData\", JSON.stringify(data));\n        setAuthData(data);\n        console.log(\"check data:\", data);\n      },\n      onError: () => {\n        console.log(\"Login Failed\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZIn1nbXKwhieAJZH88W/GDOmIJs=\", false, function () {\n  return [useStore];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["GoogleLogin","axios","useStore","jsxDEV","_jsxDEV","getData","res","fetch","ok","Error","json","App","_s","data","setAuthData","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","useOneTap","onSuccess","credentialResponse","console","log","credential","post","token","localStorage","setItem","JSON","stringify","onError","_c","$RefreshReg$"],"sources":["/Users/tolabuth/Desktop/prosonal/nest/Google Login/react-nestjs/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport {  GoogleLogin } from \"@react-oauth/google\";\n\nimport axios from \"axios\";\nimport { useStore } from \"./hook/useStore\";\nasync function getData() {\n  const res = await fetch('https://api.example.com/...')\n  // The return value is *not* serialized\n  // You can return Date, Map, Set, etc.\n \n  if (!res.ok) {\n    // This will activate the closest `error.js` Error Boundary\n    throw new Error('Failed to fetch data')\n  }\n \n  return res.json()\n}\nasync function App() {\n  const data = await getData()\n  \n  const setAuthData = useStore((state) => state.setAuthData);\n  \n  return (\n    <div className=\"App\">\n     <h1>Welcome</h1>\n   \n          <GoogleLogin\n             useOneTap={true}\n             onSuccess={async (credentialResponse) => {\n              console.log(\"this is token: \", credentialResponse.credential);\n               const { data } = await axios.post(\n                 \"http://localhost:3003/member/auth/google-login\",\n                 {\n                   // pass the token as part of the req body\n                   token: credentialResponse.credential,\n                 }\n               );\n               localStorage.setItem(\"AuthData\", JSON.stringify(data));\n               setAuthData(data);\n              console.log(\"check data:\", data);\n             }}\n             onError={() => {\n               console.log(\"Login Failed\");\n             }}\n           />\n        \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAUA,WAAW,QAAQ,qBAAqB;AAElD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,eAAeC,OAAOA,CAAA,EAAG;EACvB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;EACtD;EACA;;EAEA,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;IACX;IACA,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EAEA,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AACA,eAAeC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,IAAI,GAAG,MAAMR,OAAO,CAAC,CAAC;EAE5B,MAAMS,WAAW,GAAGZ,QAAQ,CAAEa,KAAK,IAAKA,KAAK,CAACD,WAAW,CAAC;EAE1D,oBACEV,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnBb,OAAA;MAAAa,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEXjB,OAAA,CAACJ,WAAW;MACTsB,SAAS,EAAE,IAAK;MAChBC,SAAS,EAAE,MAAOC,kBAAkB,IAAK;QACxCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,kBAAkB,CAACG,UAAU,CAAC;QAC5D,MAAM;UAAEd;QAAK,CAAC,GAAG,MAAMZ,KAAK,CAAC2B,IAAI,CAC/B,gDAAgD,EAChD;UACE;UACAC,KAAK,EAAEL,kBAAkB,CAACG;QAC5B,CACF,CAAC;QACDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACpB,IAAI,CAAC,CAAC;QACtDC,WAAW,CAACD,IAAI,CAAC;QAClBY,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEb,IAAI,CAAC;MACjC,CAAE;MACFqB,OAAO,EAAEA,CAAA,KAAM;QACbT,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV;AAACT,EAAA,CA/BcD,GAAG;EAAA,QAGIT,QAAQ;AAAA;AAAAiC,EAAA,GAHfxB,GAAG;AAiClB,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}